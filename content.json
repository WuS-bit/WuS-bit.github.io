{"meta":{"title":"WuS-bit","subtitle":"","description":"","author":"Wu Shang","url":"http://WuS-bit.github.io","root":"/"},"pages":[{"title":"关于","date":"2020-04-16T03:40:34.000Z","updated":"2020-04-16T03:45:19.995Z","comments":true,"path":"about/index.html","permalink":"http://wus-bit.github.io/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-04-14T14:13:11.000Z","updated":"2020-04-16T01:45:40.907Z","comments":true,"path":"categories/index.html","permalink":"http://wus-bit.github.io/categories/index.html","excerpt":"","text":""},{"title":"海内存知己","date":"2020-04-15T14:18:11.000Z","updated":"2020-04-16T02:50:57.224Z","comments":true,"path":"friends/index.html","permalink":"http://wus-bit.github.io/friends/index.html","excerpt":"","text":"欢迎留言交换友链:我的博客信息： 名称：WuS-bit头像：https://tva1.sinaimg.cn/large/007S8ZIlly1gdve5b27cyj30qn0qnwfy.jpg地址：https://wus-bit.github.io标签：[java, 数据科学]"},{"title":"标签","date":"2020-04-14T14:05:30.000Z","updated":"2020-04-16T01:47:25.333Z","comments":true,"path":"tags/index.html","permalink":"http://wus-bit.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"explain关键字","slug":"explain关键字","date":"2020-04-20T08:41:57.000Z","updated":"2020-04-20T14:41:02.731Z","comments":true,"path":"explain关键字/","link":"","permalink":"http://wus-bit.github.io/explain%E5%85%B3%E9%94%AE%E5%AD%97/","excerpt":"概要在MySQL中，可以使用explain关键字来获取模拟优化器执行SQL语句的结果，从而知道MySQL是如何执行查询语句的，进而分析查询语句或是表结构的性能瓶颈，方便进行性能优化。","text":"概要在MySQL中，可以使用explain关键字来获取模拟优化器执行SQL语句的结果，从而知道MySQL是如何执行查询语句的，进而分析查询语句或是表结构的性能瓶颈，方便进行性能优化。 Explain关键字语法： explain + SQL；先上一个demo，留下印象： Explain中的列一、id列总是一组数字，是select查询的序列号，用来标识查询中执行select子句或操作表的顺序。 情况分析 id相同时，从上到下顺序执行操作表（mysql的查询计划是左深树） id不同时，id值越大越先执行 当查询语句不含子查询或联合(Union)时id总为1 当出现子查询时，id会增大 二、select_type表示查询类型 SIMPLE:简单的select查询，查询中不包括子查询或union PRIMARY:查询中包括任何复杂的子部分，最外层查询被标记为primary SUBQUERY:在select或where子句中的子查询 DERIVED:from子句中的子查询被标记为derived(衍生)，MySQL会递归地执行这些子查询，结果放在临时表 UNION：出现在UNION后的那个select查询会被标记为UNION UNION RESULT:从UNION表获取结果的select 三、table表示该查询是关于的那张表 四、type显示查询使用了哪种类型(访问类型) 常见访问类型效率从最好到最差：system&gt;const&gt;eq_ref&gt;ref&gt;range&gt;index&gt;all一般来说，查询至少到range级别，最好达到ref system：表中只有一行记录。 const: 通常是以primary key 或 unique索引作为where子句，且比较条件是键可取值中 的一个常量，通过一次索引便可找到。例如：select * from st where id = 1; eq_ref: 这种访问类型，MySQL知道最多只返回一条符合条件的记录。也是以主键或唯一性索引查找，但比较条件不是常量（另一表中的参考值）。 ref: 用非唯一性索引查找，返回匹配某单个值的所有行。是查找和扫描的混合体。 range: 范围扫描，即一个限制范围内的索引全扫描，常用于where子句中含between,&gt;,&lt;等范围条件的情况。 index: 用索引进行的全表扫描。 all: 全表扫描。 五、possible_keys表示查询可能使用到哪些索引，基于查询访问的列(select子句中的字段)和比较操作符来判断的。 六、key:显示查询使用的索引，如果为null，则未使用索引。若使用覆盖索引^标注，则该索引不会出现在possible_key中。 七、key_len:表示索引使用的字节数。对于复合索引，key_len可以帮助判断是否充分用上索引，判断多列索引中用到哪些列。 八、ref:显示了key中索引查找时，作为查找条件用到的列或常量。 九、rows根据表统计信息及索引选用情况，大致估算找到所需记录需要读取的行数。不是结果集行数。 十、extra:包含不适合出现在其他列的额外重要信息。 using filesort(避免出现): MySQL对数据使用一个外部的索引排序，而不是按照表内的索引顺序读取。MySQL中无法用索引完成的排序操作成为“文件排序”。（排序的字段未使用到索引） using temporary(避免出现): 使用临时表保存中间结果。常见于order by 和 group by。 using index: select操作使用了覆盖索引，避免了对数据行的操作。效率不错。","categories":[{"name":"mysql","slug":"mysql","permalink":"http://wus-bit.github.io/categories/mysql/"},{"name":"explain关键字","slug":"mysql/explain关键字","permalink":"http://wus-bit.github.io/categories/mysql/explain%E5%85%B3%E9%94%AE%E5%AD%97/"}],"tags":[{"name":"mysql基础","slug":"mysql基础","permalink":"http://wus-bit.github.io/tags/mysql%E5%9F%BA%E7%A1%80/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-04-14T10:51:22.914Z","updated":"2020-04-15T13:12:06.205Z","comments":true,"path":"hello-world/","link":"","permalink":"http://wus-bit.github.io/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"mysql","slug":"mysql","permalink":"http://wus-bit.github.io/categories/mysql/"},{"name":"explain关键字","slug":"mysql/explain关键字","permalink":"http://wus-bit.github.io/categories/mysql/explain%E5%85%B3%E9%94%AE%E5%AD%97/"}],"tags":[{"name":"mysql基础","slug":"mysql基础","permalink":"http://wus-bit.github.io/tags/mysql%E5%9F%BA%E7%A1%80/"}]}